开发过程：
    1、编码前，安装Pygame
    2、创建 Pygame 窗口以及响应用户输入
    3、设置背景色
    4、创建设置类
    5、添加飞船图像
    6、在屏幕上绘制飞船 2019。7。2
    7、重构：模块 game_functions
    8、驾驶飞船 ，允许不断移动  (这里有个坑，飞船不能移动，多次侦探，没找到原因，留着后面解决)
    9、允许不断移动   左右移动
    10、调整飞船的速度  2019.7.3
    11、限制飞船的活动范围
    12、添加子弹设置  & 创建 Bullet 类
    13、将子弹存储到编组中
    14、开火            2019.7.9
    15、删除已消失的子弹   &   限制子弹数量
    16、创建函数 fire_bullet()       $ 发现飞船无法移动的原因，事件event拼错了

12-5 侧面射击：编写一个游戏，将一艘飞船放在屏幕左边，并允许玩家上下移动飞船。在玩家按空格键时，让飞船发射一颗在屏幕中向右穿行的子弹，并在子弹离开屏幕而消失后将其删除。

    回顾项目

    研究既有代码，确定实现新功能前是否要进行重构。
     在屏幕左上角添加一个外星人，并指定合适的边距。
     根据第一个外星人的边距和屏幕尺寸计算屏幕上可容纳多少个外星人。我们将编写一个
    循环来创建一系列外星人，这些外星人填满了屏幕的上半部分。
     让外星人群向两边和下方移动，直到外星人被全部击落，有外星人撞到飞船，或有外星
    人抵达屏幕底端。如果整群外星人都被击落，我们将再创建一群外星人。如果有外星人
    撞到了飞船或抵达屏幕底端，我们将销毁飞船并再创建一群外星人。
     限制玩家可用的飞船数量，配给的飞船用完后，游戏结束。

    17、创建外星人群 & 重构 create_fleet()   2019.7.10
    18、让外星人群移动
    19、向右移动外星人
    20、创建表示外星人移动方向的设置
    21、检查外星人是否撞到了屏幕边缘
    22、 射杀外星人
    23、检测子弹与外星人的碰撞
    24、生成新的外星人群
    25、提高子弹的速度
    26、重构 update_bullets()
    27、结束游戏：a.检测外星人和飞船碰撞，b.响应外星人和飞船碰撞
    28、有外星人到达屏幕底端       2019.7.11
    29、确定应运行游戏的哪些部分

"""如何在游戏中添加大量相同的元素，如创建一群外星人；如何使用嵌
套循环来创建元素网格，还通过调用每个元素的方法update()移动了大量的元素；如何控制对象
在屏幕上移动的方向，以及如何响应事件，如有外星人到达屏幕边缘；如何检测和响应子弹和外
星人碰撞以及外星人和飞船碰撞；如何在游戏中跟踪统计信息，以及如何使用标志game_active
来判断游戏是否结束了。"""
    30、在屏幕上绘制按钮
    31、重置游戏    # 那就是即便Play按钮不可见，玩家单击其原来所在的区域时，游戏依然会作出响应
    32、将 Play 按钮切换到非活动状态
    33、修改速度设置
    34、重置速度   设置里面有个fleet_drop_speed属性，不知道去哪了
    35、记分                       2019.7.12
    36、在外星人被消灭时更新得分
    37、提高点数
    38、将得分圆整
    39、最高得分
    40、显示余下的飞船数
总结：
1、在本章中，你学习了如何创建用于开始新游戏的Play按钮
2、如何检测鼠标事件，以及在游戏处于活动状态时如何隐藏光标。
3、你可以利用学到的知识在游戏中创建其他按钮。如用于显示玩法说明的Help按钮。
4、你还学习了如何随游戏的进行调整其节奏，如何实现记分系统，以及如何以文
本和非文本方式显示信息。
bug：
1、从新启动游戏最高分没有保留
2、鼠标移动窗口，游戏暂停









